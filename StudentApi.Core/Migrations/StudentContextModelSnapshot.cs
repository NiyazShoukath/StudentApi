// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentApi.Core.Infrastructure;

#nullable disable

namespace StudentApi.Core.Migrations
{
    [DbContext(typeof(StudentContext))]
    partial class StudentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StudentApi.Core.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("StudentApi.Core.Models.StudentEnrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CollegeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnrollmentEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EnrollmentStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("StudentEnrollment", (string)null);
                });

            modelBuilder.Entity("StudentApi.Core.Models.StudentGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentEnrollmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentEnrollmentId")
                        .IsUnique();

                    b.ToTable("StudentGrade", (string)null);
                });

            modelBuilder.Entity("StudentApi.Core.Models.StudentEnrollment", b =>
                {
                    b.HasOne("StudentApi.Core.Models.Student", "Student")
                        .WithOne("StudentEnrollment")
                        .HasForeignKey("StudentApi.Core.Models.StudentEnrollment", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentApi.Core.Models.StudentGrade", b =>
                {
                    b.HasOne("StudentApi.Core.Models.StudentEnrollment", "StudentEnrollment")
                        .WithOne("StudentGrade")
                        .HasForeignKey("StudentApi.Core.Models.StudentGrade", "StudentEnrollmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentEnrollment");
                });

            modelBuilder.Entity("StudentApi.Core.Models.Student", b =>
                {
                    b.Navigation("StudentEnrollment")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentApi.Core.Models.StudentEnrollment", b =>
                {
                    b.Navigation("StudentGrade")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
